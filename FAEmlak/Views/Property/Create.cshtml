@model FAEmlak.Models.PropertyDetailViewModel
@using FAEmlak.Helpers
@inject Microsoft.AspNetCore.Mvc.Localization.IViewLocalizer Localizer
@using FAEmlak.Data

@{
    ViewData["Title"] = Localizer["PageTitle"];
}

@section Stylesheets {
    <link rel="stylesheet" href="~/admin/lib/summernote/summernote.min.css">
}

<div class="row">
    <div class="col-md-12">
        <form method="post" enctype="multipart/form-data" asp-controller="Property" asp-action="Create">
            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        @Html.LabelFor(x => x.Title)
                        <input type="text" class="form-control form-control-lg" name="Title">
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(x => x.PropertyCategory)
                        <select name="PropertyCategory" class="form-control">
                            @foreach (PropertyCategory propertyCategory in Enum.GetValues(typeof(PropertyCategory)))
                            {
                                String title = EnumHelper<PropertyCategory>.GetDisplayValue(propertyCategory);
                                <option value="@propertyCategory.ToString()">@Localizer[$"{propertyCategory.ToString()}"]</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(x => x.PropertyType)
                        <select name="PropertyType" class="form-control">
                            @foreach (PropertyType propertyType in Enum.GetValues(typeof(PropertyType)))
                            {
                                String title = EnumHelper<PropertyType>.GetDisplayValue(propertyType);
                                <option value="@propertyType.ToString()">@Localizer[$"{propertyType.ToString()}"]</option>
                            }
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label>@Localizer["City"]</label>
                        <select asp-items="@ViewBag.Cities" id="CitySelector" class="form-control">
                            <option>@Localizer["SelectCity"]</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        <label>@Localizer["State"]</label>
                        <select id="StateList" name="StateId" class="form-control">
                            <option>@Localizer["SelectState"]</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(x => x.RoomCount)
                        <select id="role" name="RoomCount" class="form-control">
                            @foreach (RoomCount roomCount in Enum.GetValues(typeof(RoomCount)))
                            {
                                String title = EnumHelper<RoomCount>.GetDisplayValue(roomCount);
                                <option value="@roomCount.ToString()">@title</option>
                            }
                        </select>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(x => x.Price)
                        <div class="form-group">
                            @Html.EditorFor(x => x.Price, new { htmlAttributes = new { @type = "number", @min = "0", @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(x => x.Area)
                        <div class="form-group">
                            @Html.EditorFor(x => x.Area, new { htmlAttributes = new { @type = "number", @min = "0", @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(x => x.FloorCount)
                        <div class="form-group">
                            @Html.EditorFor(x => x.FloorCount, new { htmlAttributes = new { @type = "number", @min = "0", @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(x => x.WhichFloor)
                        <div class="form-group">
                            @Html.EditorFor(x => x.WhichFloor, new { htmlAttributes = new { @type = "number", @min = "0", @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(x => x.BathroomCount)
                        <div class="form-group">
                            @Html.EditorFor(x => x.BathroomCount, new { htmlAttributes = new { @type = "number", @min = "0", @class = "form-control" } })
                        </div>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="form-group">
                        @Html.LabelFor(x => x.BuildingAge)
                        <div class="form-group">
                            @Html.EditorFor(x => x.BuildingAge, new { htmlAttributes = new { @type = "number", @min = "0", @class = "form-control" } })
                        </div>
                    </div>
                </div>
            </div>
            <div class="row" style="margin-bottom: 20px">
                <div class="col-sm-2">
                    <div class="form-check">
                        @Html.CheckBoxFor(x => x.HasBalcony, new { @class = "form-check-input" })
                        @Html.LabelFor(model => model.HasBalcony, new { @class = "form-check-label" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-check">
                        @Html.CheckBoxFor(x => x.HasStuff, new { @class = "form-check-input" })
                        @Html.LabelFor(model => model.HasStuff, new { @class = "form-check-label" })
                    </div>
                </div>
                <div class="col-sm-2">
                    <div class="form-check">
                        @Html.CheckBoxFor(x => x.IsInSite, new { @class = "form-check-input" })
                        @Html.LabelFor(model => model.IsInSite, new { @class = "form-check-label" })

                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Description)
                    @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @row = 5 })
                </div>
            </div>
            <div class="row mt-2">
                <div class="col-md-12">
                    <label>@Localizer["AddPhoto"]</label>
                    <div class="custom-file">
                        <input name="files" multiple="multiple" type="file" class="custom-file-input" required>
                        <label class="custom-file-label" for="validatedCustomFile">Choose file...</label>
                    </div>
                </div>
            </div>

            <div class="row d-flex justify-content-center my-5">
                <button type="submit" class="btn btn-primary notika-btn-primary btn-md waves-effect">@Localizer["Create"]</button>
            </div>
        </form>
    </div>
</div>

@section Scripts{
    <script src="~/admin/lib/summernote/summernote.min.js"></script>

    <script type="text/javascript">
        $(document).ready(function () {

            $('#Description').summernote({
                height: 200,
                minHeight: null,
                maxHeight: null,
            });

            $("#CitySelector").change(function () {
                $("#StateList").empty();
                $.ajax({
                    type: 'GET',
                    url: '@Url.Action("LoadState")',
                    dataType: 'json',
                    data: { CityId: $("#CitySelector").val() },
                    success: function (states) {
                        $.each(states, function (i, state) {
                            console.log(i);
                            $("#StateList").append('<option value="' + state.value + '">' + state.text + '</option>');
                        });
                    },
                    error: function (ex) {
                        console.log(ex);
                    }
                });
                return false;
            });
        });
    </script>
}